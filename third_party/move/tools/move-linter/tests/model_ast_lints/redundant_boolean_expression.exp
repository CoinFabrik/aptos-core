
Diagnostics:
warning: [lint] This boolean expression can be simplified. The expression `a && b || b` is equivalent to just `b`. Consider replacing with the simpler form.
  ┌─ tests/model_ast_lints/redundant_boolean_expression.move:5:13
  │
5 │         if (a && b || b) ();
  │             ^^^^^^^^^^^
  │
  = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(redundant_boolean_expression)]`.
  = For more information, see https://aptos.dev/en/build/smart-contracts/linter#redundant_boolean_expression.

warning: [lint] This boolean expression can be simplified. The expression `a || b && a` is equivalent to just `a`. Consider replacing with the simpler form.
  ┌─ tests/model_ast_lints/redundant_boolean_expression.move:8:13
  │
8 │         if (a || b && a) ();
  │             ^^^^^^^^^^^
  │
  = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(redundant_boolean_expression)]`.
  = For more information, see https://aptos.dev/en/build/smart-contracts/linter#redundant_boolean_expression.

warning: [lint] This boolean expression can be simplified. The expression `a || b && a` is equivalent to just `a`. Consider replacing with the simpler form.
   ┌─ tests/model_ast_lints/redundant_boolean_expression.move:11:13
   │
11 │         if (a || b && a) ();
   │             ^^^^^^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(redundant_boolean_expression)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#redundant_boolean_expression.

warning: [lint] This boolean expression can be simplified. The expression `a && a` is equivalent to just `a`. Consider replacing with the simpler form.
   ┌─ tests/model_ast_lints/redundant_boolean_expression.move:16:13
   │
16 │         if (a && a) ();
   │             ^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(redundant_boolean_expression)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#redundant_boolean_expression.

warning: [lint] This boolean expression can be simplified. The expression `a || a` is equivalent to just `a`. Consider replacing with the simpler form.
   ┌─ tests/model_ast_lints/redundant_boolean_expression.move:19:13
   │
19 │         if (a || a) ();
   │             ^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(redundant_boolean_expression)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#redundant_boolean_expression.

warning: [lint] This boolean expression can be simplified. The expression `a && !a` is equivalent to just `<unknown>`. Consider replacing with the simpler form.
   ┌─ tests/model_ast_lints/redundant_boolean_expression.move:24:13
   │
24 │         if (a && !a) ();
   │             ^^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(redundant_boolean_expression)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#redundant_boolean_expression.

warning: [lint] This boolean expression can be simplified. The expression `!a && a` is equivalent to just `<unknown>`. Consider replacing with the simpler form.
   ┌─ tests/model_ast_lints/redundant_boolean_expression.move:27:13
   │
27 │         if (!a && a) ();
   │             ^^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(redundant_boolean_expression)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#redundant_boolean_expression.

warning: [lint] This boolean expression can be simplified. The expression `a || !a` is equivalent to just `<unknown>`. Consider replacing with the simpler form.
   ┌─ tests/model_ast_lints/redundant_boolean_expression.move:30:13
   │
30 │         if (a || !a) ();
   │             ^^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(redundant_boolean_expression)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#redundant_boolean_expression.

warning: [lint] This boolean expression can be simplified. The expression `!a || a` is equivalent to just `<unknown>`. Consider replacing with the simpler form.
   ┌─ tests/model_ast_lints/redundant_boolean_expression.move:33:13
   │
33 │         if (!a || a) ();
   │             ^^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(redundant_boolean_expression)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#redundant_boolean_expression.

warning: [lint] This boolean expression can be simplified. The expression `(a && b) || (a && c)` is equivalent to just `a && (b || c)`. Consider replacing with the simpler form.
   ┌─ tests/model_ast_lints/redundant_boolean_expression.move:38:13
   │
38 │         if ((a && b) || (a && c)) ();
   │             ^^^^^^^^^^^^^^^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(redundant_boolean_expression)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#redundant_boolean_expression.

warning: [lint] This boolean expression can be simplified. The expression `(a || b) && (a || c)` is equivalent to just `a || (b && c)`. Consider replacing with the simpler form.
   ┌─ tests/model_ast_lints/redundant_boolean_expression.move:41:13
   │
41 │         if ((a || b) && (a || c)) ();
   │             ^^^^^^^^^^^^^^^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(redundant_boolean_expression)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#redundant_boolean_expression.
